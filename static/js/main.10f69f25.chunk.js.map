{"version":3,"sources":["Components/Searchbar/Searchbar.jsx","services/Api.jsx","Components/ImageGallery/ImageGalleryItem.jsx","Components/Button/Button.jsx","Components/Modal/Modal.jsx","Components/ImageGallery/ImageGallery.jsx","App.js","index.js"],"names":["Searchbar","submitFunction","useState","search","setSearch","className","onSubmit","event","preventDefault","alert","type","autoComplete","autoFocus","placeholder","onChange","target","value","toLowerCase","name","api","page","fetchArticles","fetch","response","json","data","totalHits","loadMoreImg","query","this","reset","ImageGalleryItem","id","webformatURL","alt","largeImgClick","onClick","src","Button","loadMore","Modal","closeModal","children","useEffect","window","addEventListener","code","createPortal","currentTarget","document","querySelector","ImageGallery","img","setImg","imgModal","setImgModal","pending","setPending","Api","saveImg","scrollTo","top","documentElement","scrollHeight","behavior","largeImageURL","find","index","then","hits","prev","catch","error","console","log","finally","map","tags","length","color","height","width","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.10f69f25.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Searchbar = ({ submitFunction }) => {\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const onChangeInpt = event => {\r\n    setSearch(event.target.value.toLowerCase());\r\n  };\r\n\r\n  const onSubmitForm = event => {\r\n    event.preventDefault();\r\n\r\n    if (search === \"\") {\r\n      return alert(\"Search field must not be empty\");\r\n    }\r\n    submitFunction(search);\r\n    setSearch(\"\");\r\n  };\r\n\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form onSubmit={onSubmitForm} className=\"SearchForm\">\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          onChange={onChangeInpt}\r\n          name=\"search\"\r\n          value={search}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n};\r\n\r\nSearchbar.propTypes = {\r\n  submitFunction: PropTypes.func.isRequired,\r\n};\r\nexport default Searchbar;\r\n","const api = {\r\n  search: \"\",\r\n  page: 1,\r\n\r\n  async fetchArticles() {\r\n    const response = await fetch(\r\n      `https://pixabay.com/api/?q=${this.search}&page=${this.page}&key=20337481-672a40f89241c2a553d794fbd&image_type=photo&orientation=horizontal&per_page=12`\r\n    );\r\n    const data = await response.json();\r\n    if (!data.totalHits) {\r\n      return alert(`Nothing found for this question.`);\r\n    }\r\n    this.loadMoreImg();\r\n    return data;\r\n  },\r\n\r\n  query(value) {\r\n    this.search = value;\r\n  },\r\n\r\n  loadMoreImg() {\r\n    this.page += 1;\r\n  },\r\n\r\n  reset() {\r\n    this.page = 1;\r\n  },\r\n};\r\n\r\nexport default api;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ImageGalleryItem = ({ id, webformatURL, alt, largeImgClick }) => {\r\n  return (\r\n    <li key={id} className=\"ImageGalleryItem\" onClick={() => largeImgClick(id)}>\r\n      <img src={webformatURL} alt={alt} className=\"ImageGalleryItem-image\" />\r\n    </li>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  webformatURL: PropTypes.string.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n  largeImgClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst Button = ({ loadMore }) => {\r\n  return (\r\n    <button type=\"button\" className=\"Button\" onClick={loadMore}>\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  loadMore: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\nconst Modal = ({ closeModal, children }) => {\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", event => {\r\n      if (event.code === \"Escape\") {\r\n        closeModal();\r\n      }\r\n    });\r\n  });\r\n\r\n  const closeBackdrop = event => {\r\n    if (event.currentTarget === event.target) {\r\n      closeModal();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div onClick={closeBackdrop} className=\"Overlay\">\r\n      <div className=\"Modal\">{children}</div>\r\n    </div>,\r\n    document.querySelector(\"#modal-root\")\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  closeModal: PropTypes.func.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nimport Api from \"../../services/Api\";\r\nimport ImageGalleryItem from \"./ImageGalleryItem\";\r\nimport Button from \"../Button/Button\";\r\nimport Modal from \"../Modal/Modal\";\r\n\r\nconst ImageGallery = ({ search }) => {\r\n  const [img, setImg] = useState([]);\r\n  const [imgModal, setImgModal] = useState(\"\");\r\n  const [pending, setPending] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!search) return;\r\n    setImg([]);\r\n    Api.query(search);\r\n    Api.reset();\r\n    saveImg();\r\n  }, [search]);\r\n\r\n  useEffect(() => {\r\n    if (Api.page === 1) return;\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: \"smooth\",\r\n    });\r\n  }, [img]);\r\n\r\n  const closeModal = () => {\r\n    setImgModal(\"\");\r\n  };\r\n\r\n  const loadMore = () => {\r\n    Api.loadMoreImg();\r\n    saveImg();\r\n  };\r\n\r\n  const largeImgClick = id => {\r\n    const largeImageURL = img.find(\r\n      (event, index) => index === id\r\n    ).largeImageURL;\r\n    setImgModal(largeImageURL);\r\n  };\r\n\r\n  const saveImg = () => {\r\n    setPending(true);\r\n\r\n    Api.fetchArticles()\r\n      .then(({ hits }) => setImg(prev => [...prev, ...hits]))\r\n      .catch(error => console.log(error))\r\n      .finally(() => setPending(false));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ul className=\"ImageGallery\">\r\n        {img.map(({ webformatURL, tags }, index) => (\r\n          <ImageGalleryItem\r\n            webformatURL={webformatURL}\r\n            alt={tags}\r\n            id={index}\r\n            key={index}\r\n            largeImgClick={largeImgClick}\r\n          />\r\n        ))}\r\n      </ul>\r\n\r\n      {imgModal && (\r\n        <Modal closeModal={closeModal}>\r\n          <img src={imgModal} alt=\"Modal\" />\r\n        </Modal>\r\n      )}\r\n\r\n      <div className=\"container-btn\">\r\n        {!!img.length && !pending && <Button loadMore={loadMore} />}\r\n      </div>\r\n\r\n      <div className=\"container-loader\">\r\n        {pending && (\r\n          <Loader type=\"Puff\" color=\"#00BFFF\" height={200} width={200} />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  search: PropTypes.string,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React, { useState } from \"react\";\n\nimport Searchbar from \"./Components/Searchbar/Searchbar\";\nimport ImageGallery from \"./Components/ImageGallery/ImageGallery\";\n\nconst App = () => {\n  const [search, setSearch] = useState(\"\");\n\n  return (\n    <>\n      <Searchbar submitFunction={setSearch} />\n      <ImageGallery search={search} />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}